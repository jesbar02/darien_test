---
# Namespace
apiVersion: v1
kind: Namespace
metadata:
  name: openwebui
---
# Redis (via Bitnami chart recommendation)
apiVersion: v1
kind: Service
metadata:
  name: redis
  namespace: openwebui
spec:
  ports:
    - port: 6379
      targetPort: 6379
  selector:
    app: redis
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: redis
  namespace: openwebui
spec:
  replicas: 1
  selector:
    matchLabels:
      app: redis
  template:
    metadata:
      labels:
        app: redis
    spec:
      containers:
        - name: redis
          image: redis:7.2
          ports:
            - containerPort: 6379
---
# Ollama Deployment (2 replicas)
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ollama
  namespace: openwebui
spec:
  replicas: 2
  selector:
    matchLabels:
      app: ollama
  template:
    metadata:
      labels:
        app: ollama
    spec:
      containers:
        - name: ollama
          image: ollama/ollama:latest
          ports:
            - containerPort: 11434
          volumeMounts:
            - mountPath: /root/.ollama
              name: ollama-models
      volumes:
        - name: ollama-models
          emptyDir: {}
---
apiVersion: v1
kind: Service
metadata:
  name: ollama
  namespace: openwebui
spec:
  selector:
    app: ollama
  ports:
    - protocol: TCP
      port: 11434
      targetPort: 11434
---
# OpenWebUI
apiVersion: apps/v1
kind: Deployment
metadata:
  name: openwebui
  namespace: openwebui
spec:
  replicas: 1
  selector:
    matchLabels:
      app: openwebui
  template:
    metadata:
      labels:
        app: openwebui
    spec:
      containers:
        - name: openwebui
          image: ghcr.io/open-webui/open-webui:main
          env:
            - name: OLLAMA_API_BASE_URL
              value: http://ollama:11434
            - name: REDIS_HOST
              value: redis
          ports:
            - containerPort: 3000
---
apiVersion: v1
kind: Service
metadata:
  name: openwebui
  namespace: openwebui
spec:
  selector:
    app: openwebui
  ports:
    - protocol: TCP
      port: 3000
      targetPort: 3000
---
# Ingress (Traefik + TLS)
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: openwebui-ingress
  namespace: openwebui
  annotations:
    traefik.ingress.kubernetes.io/router.entrypoints: websecure
    cert-manager.io/cluster-issuer: letsencrypt-prod
spec:
  tls:
    - hosts:
        - devops-jh.darienc.com
      secretName: openwebui-cert
  rules:
    - host: devops-jh.darienc.com
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: openwebui
                port:
                  number: 3000
